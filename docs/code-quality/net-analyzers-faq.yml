### YamlMime:FAQ
metadata:
  title: FxCop kod analizi (ikili analiz) ve .NET çözümleyicileri (kaynak analizi)
  ms.date: 09/06/2018
  description: Eski FxCop (ikili analiz) ile .NET çözümleyicileri (kaynak analizi) arasındaki farkı Visual Studio. Bu çözümleyicileri kullanmayla ilgili soruların yanıtlarına bakın.
  ms.custom: SEO-VS-2020
  ms.topic: conceptual
  helpviewer_keywords:
  - code analysis FAQ
  author: mikejo5000
  ms.author: mikejo
  manager: jmartens
  ms.workload:
  - dotnet
  ms.openlocfilehash: 4ce56b8485cca9897396f05145ffea92c0bd2cd8
  ms.sourcegitcommit: d4887ef2ca97c55e2dad9f179eec2c9631d91c95
  ms.translationtype: MT
  ms.contentlocale: tr-TR
  ms.lasthandoff: 05/06/2021
  ms.locfileid: "108800358"
title: Eski FxCop ve .NET çözümleyicileri hakkında sık sorulan sorular
summary: Eski FxCop (ikili analiz) ile .NET çözümleyicileri (kaynak analizi) arasındaki farkları anlamak biraz kafa karıştırıcı olabilir. Bu makale, sahip olabileceğiniz bazı soruların yanıtlarını amaçlar.
sections:
- name: Yoksayıldı
  questions:
  - question: >
      Eski FxCop ve .NET çözümleyicileri arasındaki fark nedir?
    answer: >
      Eski FxCop derleme sonrası analizi derlenmiş bir derlemede çalıştırır. FxCopCmd.exeadlı ayrı bir **yürütülebilir dosya olarak çalışır.** FxCopCmd.exe derlemeyi yükler, kod analizini çalıştırır ve ardından sonuçları (veya *tanılamayı) raporlar.*


      .NET çözümleyicileri, .NET Compiler Platform ("Roslyn") temel alır. Bunları [.NET SDK'dan etkinleştirir veya proje ya da](install-net-analyzers.md) çözüm tarafından başvurulan bir NuGet paketi olarak yükleyebilirsiniz. Çözümleyiciler, derleyici yürütmesi sırasında kaynak kodu tabanlı analizler çalıştırabilir. Çözümleyiciler,csc.exeveya **vbc.exe,** **derleyici işlemi içinde barındırıldı** ve proje derlenmişken analiz çalıştırıldı. Çözümleyici sonuçları, derleyici sonuçlarıyla birlikte rapor edilir.
  - question: >
      FxCop çözümleyicileri ile .NET çözümleyicileri arasındaki fark nedir?
    answer: >
      FxCop çözümleyicileri ve .NET çözümleyicileri, FxCop CA kurallarının .NET Compiler Platform ("Roslyn") çözümleyicisi uygulamalarına başvurur. 2019 16.8 Visual Studio .NET 5.0'dan önce, bu çözümleyiciler `Microsoft.CodeAnalysis.FxCopAnalyzers` [NuGet paketi olarak gönderildi.](https://www.nuget.org/packages/Microsoft.CodeAnalysis.FxCopAnalyzers) 2019 Visual Studio 16.8 ve .NET 5.0'dan başlayarak, bu çözümleyiciler [.NET SDK'sı ile birlikte gelir.](/dotnet/fundamentals/code-analysis/overview) NuGet paketi olarak `Microsoft.CodeAnalysis.NetAnalyzers` [da kullanılabilirler.](https://www.nuget.org/packages/Microsoft.CodeAnalysis.NetAnalyzers) Lütfen [FxCop çözümleyicileri ' nden .net çözümleyicilerine geçiş](migrate-from-fxcop-analyzers-to-net-analyzers.md)yapmayı düşünün.
  - question: >
      Kod analizini Çalıştır komutu .NET Çözümleyicileri 'ni çalıştırsın mı?
    answer: >
      Visual Studio 2019 16,5 sürümünden önce,   >  **çalışma kodu analizini** Çözümle ' yi seçtiğinizde eski analiz yürütülür. Visual Studio 2019 16,5 başlatılıyor, **Kod Analizi Çalıştır** menü seçeneği, seçili proje veya çözüm Için Roslyn tabanlı Çözümleyicileri yürütür. .NET Çözümleyicileri yüklediyseniz, bunlar da yürütülür. Daha fazla bilgi için bkz. [nasıl yapılır: yönetilen kod Için kod analizini El Ile çalıştırma](how-to-run-code-analysis-manually-for-managed-code.md).
  - question: >
      RunCodeAnalysis MSBuild proje özelliği çözümleyiciler çalıştıranlar mı?
    answer: >
      Hayır. Bir proje dosyasındaki **RunCodeAnalysis** özelliği (örneğin, *. csproj*) yalnızca eski FxCop yürütmek için kullanılır. **FxCopCmd.exe** çağıran bir oluşturma sonrası MSBuild görevi çalıştırır.
  - question: >
      Böylece .NET çözümleyiciler nasıl çalıştırılır?
    answer: >
      .NET çözümleyiciler çalıştırmak için, önce [bunları .NET SDK 'dan etkinleştirin veya bir NuGet paketi olarak yüklemeniz](install-net-analyzers.md)gerekir. Ardından, Visual Studio 'dan veya MSBuild kullanarak projenizi veya çözümünüzü oluşturun. Roslyn çözümleyicilerinin oluşturabileceği uyarılar ve hatalar **hata listesi** veya komut penceresinde görünür.
  - question: >
      .NET Çözümleyicileri NuGet paketini yükledikten sonra bile uyarı CA0507 alıyorum
    answer: >
      .NET Çözümleyicileri yüklemişseniz ancak uyarı almaya devam CA0507 **"" Kod analizini Çalıştır "özelliği, derleme sırasında çalıştırılan FxCop çözümleyicileri 'nin kullanım dışı** bırakılmıştır", [proje dosyanızdaki](../ide/solutions-and-projects-in-visual-studio.md#project-file) **RunCodeAnalysis** MSBuild özelliğini **false** olarak ayarlamanız gerekebilir. Aksi halde, eski analiz her derlemeden sonra yürütülür.


      ```xml

      <RunCodeAnalysis>false</RunCodeAnalysis>

      ```
  - question: >
      .NET çözümleyicilerine hangi kurallar eklenmiştir?
    answer: >
      .NET çözümleyicilerine eklenen eski analiz kuralları hakkında daha fazla bilgi için bkz. [FxCop kuralı bağlantı noktası durumu](fxcop-rule-port-status.md).
  - question: >
      Kod Analizi uyarıları hata olarak kabul edilir
    answer: >
      Projeniz uyarıları hata olarak değerlendirmek için Build seçeneğini kullanıyorsa, çözümleyici uyarıları hata olarak görünebilir. Kod analizi uyarılarının hata olarak kabul önlenmesi için Kod analizi hakkında SSS [bölümüne bakın.](/visualstudio/code-quality/analyzers-faq#treat-warnings-as-errors)
  - question: >
      Ayrıca bkz.
    answer: >-
      - [.NET Compiler Platform çözümleyicilere genel bakış](roslyn-analyzers-overview.md)

      - [.NET çözümleyicilerine geçirme](migrate-from-legacy-analysis-to-net-analyzers.md)

      - [.NET çözümleyicilerini yükleme](install-net-analyzers.md)
